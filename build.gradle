plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

bootJar.enabled = false
jar.enabled = false

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

allprojects {
    repositories {
//        jcenter()
//        google()
//        maven { url 'https://devrepo.kakao.com/nexus/content/groups/public/' }
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.terry'
    version = '1.0.0-SNAPSHOT'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    ext {
        set('springModulithVersion', "1.1.2")
    }

    dependencies {

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        // [Querydsl]
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"

        // [lombok]
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.projectlombok:lombok'

        // 기타
        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        // [spring-boot-starter]
//		implementation 'org.springframework.boot:spring-boot-starter'
//		testImplementation 'org.springframework.boot:spring-boot-starter-test'
        // resources/application.properties --> spring.datasource
//		implementation 'org.springframework.boot:spring-boot-starter-jdbc'
//		implementation 'org.springframework.boot:spring-boot-starter-json'

        // [JUnit5]
//		testImplementation("org.junit.platform:junit-platform-launcher:1.5.2")
//		testImplementation("org.junit.jupiter:junit-jupiter:5.5.2")

        // [modulith]
//		implementation 'org.springframework.modulith:spring-modulith-starter-core'
//		testImplementation 'org.springframework.modulith:spring-modulith-starter-test'

    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    // Querydsl 설정부
//    def generated = 'src/main/generated'

    // querydsl QClass 파일 생성 위치를 지정
//    tasks.withType(JavaCompile) {
//        options.getGeneratedSourceOutputDirectory().set(file(generated))
//    }

    // java source set 에 querydsl QClass 위치 추가
//    sourceSets {
//        main.java.srcDirs += [ generated ]
//    }

    // gradle clean 시에 QClass 디렉토리 삭제
//    clean {
//        delete file(generated)
//    }

}


